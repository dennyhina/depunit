#summary Describes the mechanism used to pass context data between classes.

=Passing data between classes=

The RunContext class provides a mechanism by which data can be passed from one class to another within the same run.  The RunContext contains a Map<String, Object>.  The RunContext provides two methods setParam and getParam to set and retrieve objects from the internal map.

To obtain the RunContext simply define the constructor of you class like so:
{{{
public MyTestClass(RunContext context)
  {
  //Save context to member variable
  }
}}}

DepUnit will detect whether your constructor takes a RunContext as a parameter and if it does it will hand it to your class when it is constructed for the current run.

During a test you can set data on the RunContext that can be used by latter tests.  A unit test, called dbConnect, can create a connection to a database and then place that connection on the RunContext.  Other tests that have a hard dependency on dbConnect can pull off the connection and use it for their tests.  In this case it would also be a good idea to add a cleanup method for dbConnect that disconnects from the database.